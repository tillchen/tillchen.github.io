<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Programming Languages - Tag - Tianyao Chen</title>
        <link>https://tillchen.com/tags/Programming-Languages/</link>
        <description>Programming Languages - Tag - Tianyao Chen</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>tillchen417@gmail.com (Tianyao Chen)</managingEditor>
            <webMaster>tillchen417@gmail.com (Tianyao Chen)</webMaster><lastBuildDate>Sat, 13 Jun 2020 22:48:53 &#43;0200</lastBuildDate><atom:link href="https://tillchen.com/tags/Programming-Languages/" rel="self" type="application/rss+xml" /><item>
    <title>Dart Notes</title>
    <link>https://tillchen.com/posts/2020-06-13-Dart-Notes/</link>
    <pubDate>Sat, 13 Jun 2020 22:48:53 &#43;0200</pubDate>
    <author>Author</author>
    <guid>https://tillchen.com/posts/2020-06-13-Dart-Notes/</guid>
    <description><![CDATA[Introduction Variables Built-in Types  Numbers Strings   References  Introduction   A basic Dart program:
1 2 3 4 5 6 7 8  printInteger(int aNumber) { print(&#39;The number iis $aNumber&#39;); } main() { var number = 42; printInteger(number); }     Everything that can be placed in a variable is an object. Even numbers, function, and null are objects. Are objects inherit from the Object class.]]></description>
</item><item>
    <title>Go Notes</title>
    <link>https://tillchen.com/posts/2020-02-17-Go-Notes/</link>
    <pubDate>Mon, 17 Feb 2020 00:00:00 &#43;0100</pubDate>
    <author>Author</author>
    <guid>https://tillchen.com/posts/2020-02-17-Go-Notes/</guid>
    <description><![CDATA[Basics Data Structures Structs Errors and Failures Goroutines and Channels Testing  Basics   Hello World:
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  package main import ( &#34;fmt&#34; &#34;strings&#34; &#34;math/rand&#34; &#34;time&#34; &#34;github.com/headfirstgo/keyboard&#34; // use go get to download the package ) func main() { fmt.Println(&#34;Hello Go!&#34;) fmt.Println(strings.Title(&#34;head first go&#34;)) rand.Seed(time.Now().Unix()) fmt.Println(rand.Intn(100)) // 0 - 99 }     Use go fmt to format the code.]]></description>
</item><item>
    <title>Kotlin Notes</title>
    <link>https://tillchen.com/posts/2019-09-04-Kotlin-Notes/</link>
    <pubDate>Wed, 04 Sep 2019 00:00:00 &#43;0200</pubDate>
    <author>Author</author>
    <guid>https://tillchen.com/posts/2019-09-04-Kotlin-Notes/</guid>
    <description><![CDATA[Table of Contents  Table of Contents Basics OOP Nulls and Exceptions Collections Lambdas and Higher-Order Functions References  Basics   Kotlin requires one main per app:
1 2 3  fun main(args: Array&lt;String&gt;) { // the args part can be omitted  println(&#34;Hello Kotlin!&#34;) }     Shorter if
1  println(if (x &gt; y) &#34;x is greater&#34; else &#34;x is not greater&#34;)     var vs val:]]></description>
</item><item>
    <title>Swift Notes</title>
    <link>https://tillchen.com/posts/2019-08-2-Swift-Notes/</link>
    <pubDate>Fri, 02 Aug 2019 00:00:00 &#43;0200</pubDate>
    <author>Author</author>
    <guid>https://tillchen.com/posts/2019-08-2-Swift-Notes/</guid>
    <description><![CDATA[Basics OOP References  Basics   How to compile and run:
1  swift hello_world.swift     No semicolons (though allowed) and no main functions. But semicolons must be used to write multiple statements in a single line.
  Use let to make a constant and var to make a variable. (Use let whenever possible) Plus, multiple variables can be declared in one line: var x = 0, y = 0.]]></description>
</item><item>
    <title>SQL Notes</title>
    <link>https://tillchen.com/posts/2019-7-27-SQL-Notes/</link>
    <pubDate>Sat, 27 Jul 2019 00:00:00 &#43;0200</pubDate>
    <author>Author</author>
    <guid>https://tillchen.com/posts/2019-7-27-SQL-Notes/</guid>
    <description><![CDATA[Basics SELECT DELETE UPDATE ALTER References  Basics   Create and use the database (MySQL as an example)
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15  CREATE DATABASE gregs_list; USE gregs_list; CREATE TABLE doughnut_list ( doughnut_id INT NOT NULL AUTO_INCREMENT, doughnut_name VARCHAR(10) DEFAULT NULL, doughnut_type VARCHAR(8) DEFAULT NULL, PRIMARY KEY (doughnut_id) ); -- Variable Char, up to 10 and 8 chars.]]></description>
</item><item>
    <title>Bash Tips</title>
    <link>https://tillchen.com/posts/2019-7-24-Bash-Tips/</link>
    <pubDate>Wed, 24 Jul 2019 00:00:00 &#43;0200</pubDate>
    <author>Author</author>
    <guid>https://tillchen.com/posts/2019-7-24-Bash-Tips/</guid>
    <description><![CDATA[Basics Writing Scripts Advanced Tricks Resources  Basics   cd alone goes to the home directory.
  ls -lt gives the long format and sorted by modification time.
  file foo.txt gives the file type.
  less foo.txt gives the content of the file.
  We can double click a filename to copy it.
  cp copies the files.
  mv moves the files or renames the files.]]></description>
</item><item>
    <title>JavaScript Notes</title>
    <link>https://tillchen.com/posts/2019-07-15-JavaScript-Notes/</link>
    <pubDate>Mon, 15 Jul 2019 00:00:00 &#43;0200</pubDate>
    <author>Author</author>
    <guid>https://tillchen.com/posts/2019-07-15-JavaScript-Notes/</guid>
    <description><![CDATA[Basics   Variables:
 Global variables live as long as the page. If we forget to declare a variable before using it, it&rsquo;ll always be global even if we first use it in a function.    The syntax for an array is similar to Python, using [] instead of {}:
1 2 3 4  var foo = [1, 2, 3, 4, 5]; foo.push(6); console.log(foo.length); foo[6] = 7; // We can do this, but be sure to avoid creating a sparse array     undefined vs null vs isNaN():]]></description>
</item><item>
    <title>Java Notes</title>
    <link>https://tillchen.com/posts/2019-06-05-Java-Notes/</link>
    <pubDate>Wed, 05 Jun 2019 00:00:00 &#43;0200</pubDate>
    <author>Author</author>
    <guid>https://tillchen.com/posts/2019-06-05-Java-Notes/</guid>
    <description><![CDATA[Basics Java Data Structures References and Garbage Collection Static Exceptions I/O Constructors Polymorphism References  Basics   SourceCode.java -&gt; Compile (javac source_code.java) -&gt; Java bytecode (SourceCode.class) -&gt;Run by the Java Virtual Machine (java SouceCode)
 Write once, run anywhere!
   Every Java app must have at least one class and at least one main method (one main per app not per class.)
1 2 3  public static void main (String[] args) { // code }     int rand = (int) (Math.]]></description>
</item><item>
    <title>Python Notes</title>
    <link>https://tillchen.com/posts/2019-05-12-Python-Notes/</link>
    <pubDate>Sun, 12 May 2019 00:00:00 &#43;0200</pubDate>
    <author>Author</author>
    <guid>https://tillchen.com/posts/2019-05-12-Python-Notes/</guid>
    <description><![CDATA[Basics Strings Numbers Lists Tuples Dictionaries Sets Input Functions OOP Random Files Exceptions Testing Install Packages PEP8 Virtual Environments Decorators Generators Miscellaneous References  Basics   If-elif-else
  dir(random) prints all the attributes of the random module.
  help(random.randint) gives the help.
  Everything in Python is an object. Python is object-based.
  type() gives the type of the object.
  bool() returns False if it&quot;s False/0/empty/None; it returns True if it&quot;s not empty.]]></description>
</item><item>
    <title>C and C&#43;&#43; Notes</title>
    <link>https://tillchen.com/posts/2019-05-05-C-and-C&#43;&#43;-Notes/</link>
    <pubDate>Sun, 05 May 2019 00:00:00 &#43;0200</pubDate>
    <author>Author</author>
    <guid>https://tillchen.com/posts/2019-05-05-C-and-C&#43;&#43;-Notes/</guid>
    <description><![CDATA[Basics Dynamic Memory Allocation Makefiles Templates STL Miscellaneous  Basics   How to compile:
1  gcc -Wall -o foo foo.c     Input in C:
1 2 3 4 5  char foo[100]; int bar; fgets(foo, sizeof(foo), stdin); scanf(&#34;%d&#34;, &amp;bar); getchar(); // must be added after scanf. It handels /n     Input in C++:
1 2  string foo; getline(cin, foo);     When two types sum, a promotion happens.]]></description>
</item></channel>
</rss>
