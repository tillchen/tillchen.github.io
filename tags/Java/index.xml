<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Java - Tag - Tianyao (Till) Chen</title>
        <link>https://tillchen.com/tags/Java/</link>
        <description>Java - Tag - Tianyao (Till) Chen</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>tillchen417@gmail.com (Tianyao (Till) Chen)</managingEditor>
            <webMaster>tillchen417@gmail.com (Tianyao (Till) Chen)</webMaster><lastBuildDate>Mon, 02 Nov 2020 19:23:08 &#43;0100</lastBuildDate><atom:link href="https://tillchen.com/tags/Java/" rel="self" type="application/rss+xml" /><item>
    <title>Modern Java Notes</title>
    <link>https://tillchen.com/posts/2020-11-02-Modern-Java-Notes/</link>
    <pubDate>Mon, 02 Nov 2020 19:23:08 &#43;0100</pubDate>
    <author>Tianyao (Till) Chen</author>
    <guid>https://tillchen.com/posts/2020-11-02-Modern-Java-Notes/</guid>
    <description><![CDATA[Method reference and lambdas Streams Default methods Optional Miscellaneous References Notes for the modern Java (Java 8+.)
Method reference and lambdas Java 8+ treats functions and lambdas as first-class citizens, which means we can pass functions around using method reference. Note that lambdas can only capture final variables in the same scope.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 inventory.]]></description>
</item>
<item>
    <title>Java Notes</title>
    <link>https://tillchen.com/posts/2019-06-05-Java-Notes/</link>
    <pubDate>Wed, 05 Jun 2019 00:00:00 &#43;0000</pubDate>
    <author>Tianyao (Till) Chen</author>
    <guid>https://tillchen.com/posts/2019-06-05-Java-Notes/</guid>
    <description><![CDATA[Basics Java Data Structures References and Garbage Collection Static Exceptions I/O Constructors Polymorphism References Basics SourceCode.java -&gt; Compile (javac source_code.java) -&gt; Java bytecode (SourceCode.class) -&gt;Run by the Java Virtual Machine (java SouceCode)
Write once, run anywhere!
Every Java app must have at least one class and at least one main method (one main per app not per class.)
1 2 3 public static void main (String[] args) { // code } int rand = (int) (Math.]]></description>
</item>
</channel>
</rss>
